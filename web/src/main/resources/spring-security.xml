<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/static-resources/**" security="none"/>


    <http auto-config="true" use-expressions="true">
        <form-login
                login-processing-url="/j_spring_security_check"
                login-page="/login"
                authentication-failure-url="/login?error"
                default-target-url="/home"
                />
        <logout logout-url="/j_spring_security_logout"
                logout-success-url="/login"
                invalidate-session="true"/>

        <intercept-url pattern="/favicon.ico" access="permitAll()" />
        <intercept-url pattern="/login" access="permitAll()" />
        <intercept-url pattern="/home" access="isAuthenticated()" />
        <intercept-url pattern="/configuration" access="isAuthenticated()" />
        <remember-me user-service-ref="userService" key="springKey" />
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service
                    data-source-ref="dataSource"
                    id="userService"
                    users-by-username-query="SELECT login, password, TRUE FROM user WHERE login=?"
                    authorities-by-username-query="SELECT login, role.name FROM USER JOIN ROLE ON USER.id_role=ROLE.id_role WHERE login=?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>